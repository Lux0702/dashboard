{"version":3,"file":"static/js/1299.feafa66e.chunk.js","mappings":"uOAeA,MAoEA,EApEeA,KACb,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAoBnC,OAlBAC,EAAAA,EAAAA,YAAU,KACWC,WACjB,IACE,MAAMC,QAAiBC,MAAM,sCAC7B,GAAID,EAASE,GAAI,CACf,MAAMC,QAAaH,EAASI,OAC5BR,EAASO,EAAKE,KAAKA,KAErB,MACEC,QAAQC,MAAM,wBAAyBP,EAASQ,WAEpD,CAAE,MAAOD,GACPD,QAAQC,MAAM,wBAAyBA,EACzC,GAGFE,EAAY,GACX,KAEDC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAC,UACHF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAI,GAAGF,UACXG,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAACC,UAAU,OAAML,SAAA,EACrBG,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAAAN,SAAA,EACVF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,oCAA2B,KAACF,EAAAA,EAAAA,KAAA,gBAEtCA,EAAAA,EAAAA,KAACS,EAAAA,GAAS,CAAAP,UACRG,EAAAA,EAAAA,MAACK,EAAAA,GAAM,CAAAR,SAAA,EACLF,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAAAT,UACTG,EAAAA,EAAAA,MAACO,EAAAA,GAAS,CAAAV,SAAA,EACRF,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKZ,SAAC,OAC9BF,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKZ,SAAC,2BAC9BF,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKZ,SAAC,wBAC9BF,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKZ,SAAC,qBAC9BF,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKZ,SAAC,6BAC9BF,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKZ,SAAC,2BAGlCF,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CAAAb,SACRjB,EAAM+B,KAAI,CAACvB,EAAMwB,KAChBZ,EAAAA,EAAAA,MAACO,EAAAA,GAAS,CAAAV,SAAA,EACRF,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAM,MAAKZ,SAAEe,EAAQ,KACvCjB,EAAAA,EAAAA,KAACkB,EAAAA,GAAc,CAAAhB,SAAET,EAAK0B,SACtBnB,EAAAA,EAAAA,KAACkB,EAAAA,GAAc,CAAAhB,SACZT,EAAK2B,YAAc3B,EAAK2B,WAAW,IAAM3B,EAAK2B,WAAW,GAAGC,aACzD5B,EAAK2B,WAAW,GAAGC,aACnB,MAENrB,EAAAA,EAAAA,KAACkB,EAAAA,GAAc,CAAAhB,SACZT,EAAK6B,SAAW7B,EAAK6B,QAAQ,IAAM7B,EAAK6B,QAAQ,GAAGC,WAChD9B,EAAK6B,QAAQ,GAAGC,WAChB,MAENvB,EAAAA,EAAAA,KAACkB,EAAAA,GAAc,CAAAhB,SAAET,EAAK+B,SACtBxB,EAAAA,EAAAA,KAACkB,EAAAA,GAAc,CAAAhB,SAAET,EAAKgC,UAdRR,kBAsBvB,C","sources":["views/base/tables/Tables.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\n\nconst Tables = () => {\n  const [books, setBooks] = useState([])\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const response = await fetch('http://localhost:3333/api/v1/books')\n        if (response.ok) {\n          const book = await response.json()\n          setBooks(book.data.data)\n          //console.log('Get data success', books)\n        } else {\n          console.error('Error fetching books:', response.statusText)\n        }\n      } catch (error) {\n        console.error('Error fetching books:', error)\n      }\n    }\n\n    fetchBooks()\n  }, [])\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Danh sách sản phẩm</strong> <small></small>\n          </CCardHeader>\n          <CCardBody>\n            <CTable>\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Tựa đề</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Thể loại</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Tác giả</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Số lượng</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Giá tiền</CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {books.map((book, index) => (\n                  <CTableRow key={index}>\n                    <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n                    <CTableDataCell>{book.title}</CTableDataCell>\n                    <CTableDataCell>\n                      {book.categories && book.categories[0] && book.categories[0].categoryName\n                        ? book.categories[0].categoryName\n                        : ''}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      {book.authors && book.authors[0] && book.authors[0].authorName\n                        ? book.authors[0].authorName\n                        : ''}\n                    </CTableDataCell>\n                    <CTableDataCell>{book.stock}</CTableDataCell>\n                    <CTableDataCell>{book.price}</CTableDataCell>\n                  </CTableRow>\n                ))}\n              </CTableBody>\n            </CTable>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Tables\n"],"names":["Tables","books","setBooks","useState","useEffect","async","response","fetch","ok","book","json","data","console","error","statusText","fetchBooks","_jsx","CRow","children","CCol","xs","_jsxs","CCard","className","CCardHeader","CCardBody","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","map","index","CTableDataCell","title","categories","categoryName","authors","authorName","stock","price"],"sourceRoot":""}