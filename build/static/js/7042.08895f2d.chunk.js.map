{"version":3,"file":"static/js/7042.08895f2d.chunk.js","mappings":"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","sources":["views/forms/form-control/FormControl.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormTextarea,\n  CRow,\n  CToast,\n  CToastBody,\n  CToastClose,\n  CToastHeader,\n  CToaster,\n} from '@coreui/react'\nimport { DocsExample } from 'src/components'\nimport Select from 'react-select'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport CustomToast from 'src/views/notifications/toasts/NotificationToasts'\n\nconst FormControl = () => {\n  const [selectedCategories, setSelectedCategories] = useState([])\n  const [selectedAuthors, setSelectedAuthors] = useState([])\n  const [showSuccessToast, setShowSuccessToast] = useState(false)\n  const [inputAuthors, setInputAuthors] = useState('')\n  const [inputCategories, setInputCategories] = useState('')\n  const [categoryOptions, setCategoryOptions] = useState([])\n  const [authorOptions, setAuthorOptions] = useState([])\n  // const categoryOptions = [\n  //   { value: 'Tiểu thuyết', label: 'Tiểu Thuyết' },\n  //   { value: 'Lãng mạn', label: 'Lãng mạn' },\n  //   { value: 'Option 3', label: 'Option 3' },\n  //   { value: 'Option 4', label: 'Option 4' },\n  //   { value: 'Option 5', label: 'Option 5' },\n  // ]\n\n  // const authorOptions = [\n  //   { value: 'Author 1', label: 'Author 1' },\n  //   { value: 'Author 2', label: 'Author 2' },\n  //   { value: 'Author 3', label: 'Author 3' },\n  // ]\n\n  const [formData, setFormData] = useState({\n    title: '',\n    categories: [],\n    stock: 0,\n    authors: [],\n    price: 0,\n    isbn: '',\n    pageNumbers: '',\n    publishedDate: '',\n    publisher: '',\n    language: '',\n    description: '',\n    image: null,\n  })\n  useEffect(() => {\n    const fetchOptions = async () => {\n      try {\n        const categoryResponse = await fetch('http://localhost:3333/api/v1/categories')\n        if (categoryResponse.ok) {\n          const categoryData = await categoryResponse.json()\n          // In ra console để xem dữ liệu trả về từ API\n          console.log('categoryData:', categoryData)\n          // Kiểm tra xem categoryData có thuộc tính categories không\n          if (categoryData && categoryData.data && Array.isArray(categoryData.data)) {\n            setCategoryOptions(\n              categoryData.data.map((category) => ({\n                value: category.categoryName,\n                label: category.categoryName,\n              })),\n            )\n          } else {\n            console.error('Dữ liệu từ API không đúng định dạng.')\n          }\n        } else {\n          console.error('Không thể lấy dữ liệu từ API.')\n        }\n        const authorResponse = await fetch('http://localhost:3333/api/v1/authors')\n        if (authorResponse.ok) {\n          const authorData = await authorResponse.json()\n          // In ra console để xem dữ liệu trả về từ API\n          console.log('categoryData:', authorData)\n          // Kiểm tra xem categoryData có thuộc tính categories không\n          if (authorData && authorData.data && Array.isArray(authorData.data)) {\n            setAuthorOptions(\n              authorData.data.map((author) => ({\n                value: author.authorName,\n                label: author.authorName,\n              })),\n            )\n          } else {\n            console.error('Dữ liệu từ API không đúng định dạng.')\n          }\n        } else {\n          console.error('Không thể lấy dữ liệu từ API.')\n        }\n      } catch (error) {\n        console.error('Lỗi trong quá trình lấy dữ liệu từ API:', error)\n      }\n    }\n\n    fetchOptions()\n  }, [])\n\n  // const handleInputChange = (event) => {\n  //   const { name, value } = event.target\n  //   setFormData((prevState) => ({\n  //     ...prevState,\n  //     [name]:\n  //       name === 'authors' ? [value] : Array.isArray(prevState[name]) ? prevState[name] : value,\n  //   }))\n  // }\n  const handleInputChange = (event) => {\n    const { name, value } = event.target\n    if (name === 'authors') {\n      setInputAuthors(value)\n      setFormData((prevState) => ({\n        ...prevState,\n        [name]: Array.isArray(prevState[name]) ? prevState[name] : value,\n      }))\n    } else if (name === 'categories') {\n      setInputCategories(value)\n      setFormData((prevState) => ({\n        ...prevState,\n        [name]: Array.isArray(prevState[name]) ? prevState[name] : value,\n      }))\n    } else {\n      setFormData((prevState) => ({\n        ...prevState,\n        [name]: Array.isArray(prevState[name]) ? prevState[name] : value,\n      }))\n    }\n  }\n  const handleSelectChange = (selectedOptions, field) => {\n    const selectedValues = selectedOptions.map((option) => option.value).filter(Boolean)\n    if (field === 'categories') {\n      setSelectedCategories(selectedOptions)\n      setFormData((prevState) => ({\n        ...prevState,\n        categories: inputCategories ? [inputCategories, ...selectedValues] : selectedValues,\n      }))\n    } else if (field === 'authorss') {\n      setSelectedAuthors(selectedOptions)\n      setFormData((prevState) => ({\n        ...prevState,\n        authors: inputAuthors ? [inputAuthors, ...selectedValues] : selectedValues,\n      }))\n    }\n  }\n\n  // const handleSelectChange = (selectedOptions, field) => {\n  //   const selectedValues = selectedOptions.map((option) => option.value).filter(Boolean)\n  //   setFormData((prevState) => ({\n  //     ...prevState,\n  //     [field.toString()]: selectedValues,\n  //   }))\n  // }\n  //fix 2\n  // const handleSelectChange = (selectedOptions, field) => {\n  //   const selectedValues = selectedOptions.map((option) => option.value).filter(Boolean)\n  //   setFormData((prevState) => ({\n  //     ...prevState,\n  //     [field.toString()]: selectedValues,\n  //     authors: inputAuthors ? [inputAuthors, ...selectedValues] : selectedValues,\n  //   }))\n  //   setSelectedAuthors(selectedOptions)\n  // }\n  const handleImageChange = (event) => {\n    const file = event.target.files[0]\n    setFormData((prevState) => ({\n      ...prevState,\n      image: file,\n    }))\n  }\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    console.log(formData)\n    const userInfoString = localStorage.getItem('userInfo')\n    const userInfo = JSON.parse(userInfoString)\n    const token = userInfo.data.accessToken\n    const formDataToSend = new FormData()\n\n    // Gán giá trị từ state formData vào formDataToSend\n    for (const key in formData) {\n      if (key === 'categories' || key === 'authors') {\n        // Chuyển đổi mảng thành chuỗi JSON nếu là categories hoặc authors\n        formDataToSend.append(key, JSON.stringify(formData[key]))\n        console.log(formData[key])\n      } else if (key !== 'authorss') {\n        formDataToSend.append(key, formData[key])\n      }\n    }\n    // Gán file ảnh đã chọn vào formDataToSend\n    //formDataToSend.append('image', selectedImage)\n    try {\n      const response = await fetch('http://localhost:3333/api/v1/books/add', {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: formDataToSend,\n      })\n\n      if (response.ok) {\n        console.log('Dữ liệu đã được gửi thành công.')\n        setShowSuccessToast(true)\n      } else {\n        const error = await response.json()\n        console.error(error.message)\n        setShowSuccessToast(true)\n      }\n    } catch (error) {\n      console.error('Lỗi trong quá trình xử lý yêu cầu:', error)\n      setShowSuccessToast(true)\n    }\n  }\n  return (\n    <CRow>\n      <CCol xs={12} md={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Thông tin sách</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CForm>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"title\">Tựa đề</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  placeholder=\"Tên sản phẩm\"\n                  value={formData.title}\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"categories\">Thể loại</CFormLabel>\n                <Select\n                  options={categoryOptions}\n                  isMulti\n                  onChange={(selectedOptions) => {\n                    handleSelectChange(selectedOptions, 'categories')\n                    setSelectedCategories(selectedOptions)\n                  }}\n                  value={selectedCategories}\n                  placeholder=\"Chọn thể loại\"\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"stock\">Tồn kho</CFormLabel>\n                <CFormInput\n                  type=\"number\"\n                  id=\"stock\"\n                  name=\"stock\"\n                  placeholder=\"Số lượng sản phẩm\"\n                  value={formData.stock}\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"authors\">Tác giả</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"authors\"\n                  name=\"authors\"\n                  placeholder=\"Nhập tên tác giả\"\n                  value={inputAuthors}\n                  onChange={(e) => handleInputChange(e)}\n                />\n                <Select\n                  id=\"authorss\"\n                  options={authorOptions}\n                  isMulti\n                  value={selectedAuthors}\n                  onChange={(selectedOptions) => {\n                    handleSelectChange(selectedOptions, 'authorss')\n                    setSelectedAuthors(selectedOptions)\n                  }}\n                  placeholder=\"Chọn tác giả\"\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"price\">Giá tiền</CFormLabel>\n                <CFormInput\n                  type=\"number\"\n                  id=\"price\"\n                  name=\"price\"\n                  placeholder=\"Nhập giá tiền\"\n                  value={formData.price}\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </div>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12} md={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Thông tin chi tiết</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CForm>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"authors\">ISBS</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"isbn\"\n                  name=\"isbn\"\n                  placeholder=\"Mã ISBN\"\n                  value={formData.isbn}\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"formFile\">Ảnh</CFormLabel>\n                <CFormInput\n                  type=\"file\"\n                  id=\"image\"\n                  name=\"image\"\n                  accept=\".png, .jpg, .jpeg\"\n                  placeholder=\"Số lượng sản phẩm\"\n                  //value={formData.image}\n                  onChange={handleImageChange}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CRow>\n                  <CCol xs=\"6\" className=\"mb-3\">\n                    <CFormLabel htmlFor=\"pageNumbers\">Số trang</CFormLabel>\n                    <CFormInput\n                      type=\"text\"\n                      id=\"pageNumbers\"\n                      name=\"pageNumbers\"\n                      placeholder=\"Nhập số trang\"\n                      value={formData.pageNumbers}\n                      onChange={(e) => handleInputChange(e)}\n                    />\n                  </CCol>\n                  <CCol xs=\"6\" className=\"mb-3\">\n                    <CFormLabel htmlFor=\"publishedDate\">Ngày xuất bản</CFormLabel>\n                    <CFormInput\n                      type=\"date\"\n                      id=\"publishedDate\"\n                      name=\"publishedDate\"\n                      placeholder=\"Nhập số ngày sản xuất\"\n                      value={formData.publishedDate}\n                      onChange={(e) => handleInputChange(e)}\n                    />\n                  </CCol>\n                </CRow>\n              </div>\n              <div className=\"mb-3\">\n                <CRow>\n                  <CCol xs=\"6\" className=\"mb-3\">\n                    <CFormLabel htmlFor=\"publisher\">Nhà xuất bản</CFormLabel>\n                    <CFormInput\n                      type=\"text\"\n                      id=\"publisher\"\n                      name=\"publisher\"\n                      placeholder=\"Nhập nhà xuất bản\"\n                      value={formData.publisher}\n                      onChange={(e) => handleInputChange(e)}\n                    />\n                  </CCol>\n                  <CCol xs=\"6\" className=\"mb-3\">\n                    <CFormLabel htmlFor=\"language\">Ngôn ngữ</CFormLabel>\n                    <CFormInput\n                      type=\"text\"\n                      id=\"language\"\n                      name=\"language\"\n                      placeholder=\"Ngôn ngữ sách\"\n                      value={formData.language}\n                      onChange={(e) => handleInputChange(e)}\n                    />\n                  </CCol>\n                </CRow>\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"description\">Mô tả</CFormLabel>\n                <CFormTextarea\n                  rows={5}\n                  type=\"text\"\n                  id=\"description\"\n                  name=\"description\"\n                  placeholder=\"Mô tả sách\"\n                  value={formData.description}\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </div>\n              <CButton color=\"primary\" type=\"submit\" onClick={(e) => handleSubmit(e)}>\n                Submit\n              </CButton>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default FormControl\n"],"names":["FormControl","selectedCategories","setSelectedCategories","useState","selectedAuthors","setSelectedAuthors","showSuccessToast","setShowSuccessToast","inputAuthors","setInputAuthors","inputCategories","setInputCategories","categoryOptions","setCategoryOptions","authorOptions","setAuthorOptions","formData","setFormData","title","categories","stock","authors","price","isbn","pageNumbers","publishedDate","publisher","language","description","image","useEffect","async","categoryResponse","fetch","ok","categoryData","json","console","log","data","Array","isArray","map","category","value","categoryName","label","error","authorResponse","authorData","author","authorName","fetchOptions","handleInputChange","event","name","target","prevState","handleSelectChange","selectedOptions","field","selectedValues","option","filter","Boolean","_jsxs","CRow","children","_jsx","CCol","xs","md","CCard","className","CCardHeader","CCardBody","CForm","CFormLabel","htmlFor","CFormInput","type","id","placeholder","onChange","e","Select","options","isMulti","accept","file","files","CFormTextarea","rows","CButton","color","onClick","preventDefault","userInfoString","localStorage","getItem","token","JSON","parse","accessToken","formDataToSend","FormData","key","append","stringify","response","method","headers","Authorization","concat","body","message","handleSubmit"],"sourceRoot":""}