{"version":3,"file":"static/js/1915.278554ac.chunk.js","mappings":"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","sources":["views/dashboard/Dashboard.js","../node_modules/@coreui/icons/src/brand/cib-google.ts","../node_modules/@coreui/icons/src/free/cil-cloud-download.ts","../node_modules/@coreui/icons/src/free/cil-user-female.ts","../node_modules/@coreui/utils/src/hexToRgba.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { API_BASE_URL } from 'src/constant'\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine, CChartBar } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport { Spin } from 'antd'\n\nconst Dashboard = () => {\n  const [statitic, setIsStatitic] = useState([])\n  const [currentStats, setCurrentStats] = useState('daily')\n  const [spinning, setSpinning] = useState(false)\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  //get statitic\n  useEffect(() => {\n    const fetchStatitic = async () => {\n      const userInfoString = localStorage.getItem('userInfo')\n      const userInfo = JSON.parse(userInfoString)\n      const token = userInfo.data.accessToken\n      try {\n        setSpinning(true)\n        const response = await fetch(`${API_BASE_URL}/admin/statistics`, {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        if (response.ok) {\n          const stattitic = await response.json()\n          setIsStatitic(stattitic)\n          console.log(stattitic)\n        } else {\n          console.error('Error fetching users:', response.statusText)\n        }\n      } catch (error) {\n        console.error('Error fetching users:', error)\n      } finally {\n        setSpinning(false)\n      }\n    }\n    fetchStatitic()\n  }, [])\n  const data = {\n    daily: {\n      labels: statitic.data?.revenueByDay ? Object.keys(statitic.data.revenueByDay) : [],\n      datasets: [\n        {\n          label: 'Daily Revenue',\n          backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n          borderColor: getStyle('--cui-info'),\n          pointHoverBackgroundColor: getStyle('--cui-info'),\n          borderWidth: 2,\n          data: statitic.data?.revenueByDay\n            ? Object.entries(statitic.data.revenueByDay).map(([day, value]) => {\n                console.log('Day:', day, 'Value:', value)\n                return value // Chỉ cần thêm giá trị vào mảng data\n              })\n            : [],\n          fill: true,\n        },\n      ],\n    },\n    monthly: {\n      labels: statitic.data?.revenueByMonth ? Object.keys(statitic.data.revenueByMonth) : [],\n      datasets: [\n        {\n          label: 'Monthly Revenue',\n          backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n          borderColor: getStyle('--cui-info'),\n          pointHoverBackgroundColor: getStyle('--cui-info'),\n          borderWidth: 2,\n          data: statitic.data?.revenueByMonth\n            ? Object.entries(statitic.data.revenueByMonth).map(([month, value]) => {\n                console.log('Month:', month, 'Value:', value)\n                return value // Chỉ cần thêm giá trị vào mảng data\n              })\n            : [],\n          fill: true,\n        },\n      ],\n    },\n    yearly: {\n      labels: statitic.data?.revenueByYear ? Object.keys(statitic.data.revenueByYear) : [],\n      datasets: [\n        {\n          label: 'Yearly Revenue',\n          backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n          borderColor: getStyle('--cui-info'),\n          pointHoverBackgroundColor: getStyle('--cui-info'),\n          borderWidth: 2,\n          data: statitic.data?.revenueByYear\n            ? Object.entries(statitic.data.revenueByYear).map(([year, value]) => {\n                console.log('Year:', year, 'Value:', value)\n                return value // Chỉ cần thêm giá trị vào mảng data\n              })\n            : [],\n          fill: true,\n        },\n      ],\n    },\n  }\n  const statsOptions = [\n    { value: 'daily', label: 'Ngày' },\n    { value: 'monthly', label: 'Tháng' },\n    { value: 'yearly', label: 'Năm' },\n  ]\n  const handleDateRangeChange = (newDateRange) => {}\n\n  return (\n    <>\n      <WidgetsDropdown />\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Thống kê bán hàng\n              </h4>\n              <div className=\"small text-medium-emphasis\"></div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {statsOptions.map((option) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={option.value}\n                    className=\"mx-0\"\n                    active={currentStats === option.value}\n                    onClick={() => {\n                      setCurrentStats(option.value)\n                      handleDateRangeChange(option.value)\n                    }}\n                  >\n                    {option.label}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartBar\n            style={{ height: '300px', marginTop: '40px' }}\n            data={data[currentStats]}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n                datalabels: {\n                  anchor: 'end',\n                  align: 'top',\n                  offset: 8,\n                  font: {\n                    weight: 'bold',\n                  },\n                  formatter: (value) => value.toLocaleString(),\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <Spin spinning={spinning} fullscreen />\n      </CCard>\n\n      {/* <WidgetsBrand withCharts /> */}\n    </>\n  )\n}\n\nexport default Dashboard\n","export var cibGoogle = [\"32 32\", \"<path d='M16.318 13.714v5.484h9.078c-0.37 2.354-2.745 6.901-9.078 6.901-5.458 0-9.917-4.521-9.917-10.099s4.458-10.099 9.917-10.099c3.109 0 5.193 1.318 6.38 2.464l4.339-4.182c-2.786-2.599-6.396-4.182-10.719-4.182-8.844 0-16 7.151-16 16s7.156 16 16 16c9.234 0 15.365-6.49 15.365-15.635 0-1.052-0.115-1.854-0.255-2.651z'/>\"];\n","export var cilCloudDownload = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='272 434.744 272 209.176 240 209.176 240 434.744 188.118 382.862 165.49 405.489 256 496 346.51 405.489 323.882 382.862 272 434.744' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M400,161.176c0-79.4-64.6-144-144-144s-144,64.6-144,144a96,96,0,0,0,0,192h80v-32H112a64,64,0,0,1,0-128h32v-32a112,112,0,0,1,224,0v32h32a64,64,0,0,1,0,128H320v32h80a96,96,0,0,0,0-192Z' class='ci-primary'/>\"];\n","export var cilUserFemale = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M403.6,343.656l-72.823-47.334L344.043,272h23.428a48,48,0,0,0,44.119-66.908L361.581,90.57a112.029,112.029,0,0,0-211.162,0L100.41,205.092A48,48,0,0,0,144.529,272h23.428l13.266,24.322L108.4,343.656A79.725,79.725,0,0,0,72,410.732V496H440V410.732A79.727,79.727,0,0,0,403.6,343.656ZM408,464H104V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479L186.953,240H144.529a16,16,0,0,1-14.72-22.27l50.172-114.9.448-1.143a80.029,80.029,0,0,1,151.142,0l.2.58L382.191,217.73A16,16,0,0,1,367.471,240H325.047L288.5,307.007l97.661,63.479h0A47.836,47.836,0,0,1,408,410.732Z' class='ci-primary'/>\"];\n","/**\n * --------------------------------------------------------------------------\n * CoreUI Utils (__COREUI_VERSION__): hexToRgba.ts\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/* eslint-disable no-magic-numbers */\nconst hexToRgba = (color: string, opacity = 100) => {\n  if (typeof color === 'undefined') {\n    throw new TypeError('Hex color is not defined')\n  }\n\n  const hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i)\n\n  if (!hex) {\n    throw new Error(`${color} is not a valid hex color`)\n  }\n\n  let r\n  let g\n  let b\n\n  if (color.length === 7) {\n    r = parseInt(color.slice(1, 3), 16)\n    g = parseInt(color.slice(3, 5), 16)\n    b = parseInt(color.slice(5, 7), 16)\n  } else {\n    r = parseInt(color.slice(1, 2), 16)\n    g = parseInt(color.slice(2, 3), 16)\n    b = parseInt(color.slice(3, 5), 16)\n  }\n\n  return `rgba(${r}, ${g}, ${b}, ${opacity / 100})`\n}\n\nexport default hexToRgba\n"],"names":["Dashboard","_statitic$data","_statitic$data2","_statitic$data3","_statitic$data4","_statitic$data5","_statitic$data6","statitic","setIsStatitic","useState","currentStats","setCurrentStats","spinning","setSpinning","cilUser","cilUserFemale","cibGoogle","cibFacebook","cibTwitter","cibLinkedin","useEffect","async","userInfoString","localStorage","getItem","token","JSON","parse","data","accessToken","response","fetch","concat","API_BASE_URL","method","headers","Authorization","ok","stattitic","json","console","log","error","statusText","fetchStatitic","daily","labels","revenueByDay","Object","keys","datasets","label","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","entries","map","_ref","day","value","fill","monthly","revenueByMonth","_ref2","month","yearly","revenueByYear","_ref3","year","_jsxs","_Fragment","children","_jsx","WidgetsDropdown","CCard","className","CCardBody","CRow","CCol","sm","id","CButton","color","CIcon","icon","cilCloudDownload","CButtonGroup","option","active","onClick","CChartBar","style","height","marginTop","options","maintainAspectRatio","plugins","legend","display","datalabels","anchor","align","offset","font","weight","formatter","toLocaleString","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","Math","ceil","max","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","Spin","fullscreen","opacity","TypeError","r","g","b","match","Error","length","parseInt","slice"],"sourceRoot":""}